name: Schedule build examples

on:
  workflow_dispatch:
  schedule:
    - cron:  '* * * * *' # Schedule every 5 minutes

jobs:
  schedule_build_examples:
    name: Schedule build examples
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Schedule build examples
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ACTION_PAT }}
          script: |
            // https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#list-pull-requests
            const response = await github.request('GET /repos/{owner}/{repo}/pulls', {
              owner: 'AgoraIO-Extensions',
              repo: 'Agora-Flutter-SDK',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });

            if (response.status == 200) {
              const prs = response.data;
              for (let pr of prs) {
                let prNumber = pr.number;
                let targetBranch = pr.head.ref;

                for (let label of pr.labels) {
                  if (label.name == "ci:schedule_build_example") {
                    const owner = "littleGnAl"
                    const repo = "hoe"
                    const workflow_id = "build_and_post_result_to_pr.yml"
                    const ref = 'main'

                    // see https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event
                    // Only trigger Agora-Flutter-SDK repo at this time
                    github.request(`POST /repos/${owner}/${repo}/actions/workflows/${workflow_id}/dispatches`, {
                      ref: ref,
                      inputs: {
                        'target_repo': 'AgoraIO-Extensions/Agora-Flutter-SDK',
                        'target_branch': targetBranch,
                        'pr_number': `${prNumber}`
                      },
                      headers: {
                        'X-GitHub-Api-Version': '2022-11-28'
                      }
                    });

                    break;
                  }
                }
              }
            }