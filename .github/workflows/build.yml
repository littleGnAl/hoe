name: Build flutter project example

on: 
  workflow_dispatch:
    inputs:
      build_branch:
        description: flutter project branch
        type: string
        required: true
        default: 'main'

      setup-local-dev:
        type: boolean
        description: Is setup local dev
        default: false

      iris-macos-cdn-url:
        description: iris macos cdn url
        type: string

      iris-android-cdn-url:
        description: iris android cdn url
        type: string

jobs:
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    env:
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Check out build project
        uses: actions/checkout@v3
        with:
          repository: AgoraIO/Agora-Flutter-SDK
          ref: ${{ inputs.build_branch }}
          path: Agora-Flutter-SDK

      - uses: actions/setup-java@v1
        with:
          java-version: '11'

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.0.0'

      - name: Run build android
        run: |
          IS_SETUP_LOCAL_DEV=${{ github.event.inputs.setup-local-dev }}
          echo "Is set up local dev: ${IS_SETUP_LOCAL_DEV}"
          EXTRA_ARGS=""
          if ${IS_SETUP_LOCAL_DEV} ; then
            EXTRA_ARGS=" --setup-local-dev"
          fi

          IRIS_ANDROID_CDN_URL=${{ github.event.inputs.iris-android-cdn-url }}
          if [ ! -z "${IRIS_ANDROID_CDN_URL}" ]; then
            EXTRA_ARGS="${EXTRA_ARGS} --iris-android-cdn-url=${IRIS_ANDROID_CDN_URL}"
          fi

          echo "Extra args: ${EXTRA_ARGS}"

          mkdir -p output
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example \
            --project-dir=Agora-Flutter-SDK \
            --artifacts-output-dir=output \
            --platforms=android --process-build \
            --apple-package-name=io.agora.agoraRtcEngineExample \
            --flutter-package-name=agora_rtc_engine \
            ${EXTRA_ARGS}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: agora_rtc_engine_example_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: agora_rtc_engine_example_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  build_macos:
    name: Build macos
    runs-on: macos-11
    timeout-minutes: 60
    env:
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Check out build project
        uses: actions/checkout@v3
        with:
          repository: AgoraIO/Agora-Flutter-SDK
          ref: ${{ inputs.build_branch }}
          path: Agora-Flutter-SDK

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.0.0'

      - name: Run build macos
        run: |
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example --project-dir=Agora-Flutter-SDK --artifacts-output-dir=output --platforms=macos --process-build --apple-package-name=io.agora.agoraRtcEngineExample --flutter-package-name=agora_rtc_engine
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: agora_rtc_engine_example_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: agora_rtc_engine_example_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  build_windows:
    name: Build windows
    runs-on: windows-2019
    timeout-minutes: 60
    env:
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Check out build project
        uses: actions/checkout@v3
        with:
          repository: AgoraIO/Agora-Flutter-SDK
          ref: ${{ inputs.build_branch }}
          path: Agora-Flutter-SDK

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.0.0'

      - name: Run build windows
        run: |
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example --project-dir=Agora-Flutter-SDK --artifacts-output-dir=output --platforms=windows --process-build --apple-package-name=io.agora.agoraRtcEngineExample --flutter-package-name=agora_rtc_engine
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: agora_rtc_engine_example_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: agora_rtc_engine_example_${{ steps.date.outputs.date }}
          files: "output/*.zip"

  build_ios:
    name: Build ios
    runs-on: macos-11
    timeout-minutes: 60
    env:
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
      # AgoraLab2020
      AGORALAB2020_P12_BASE64: ${{ secrets.AGORALAB2020_P12_BASE64 }}
      AGORALAB2020_P12_PWD: ${{ secrets.AGORALAB2020_P12_PWD }}
      AGORALAB2020_PP_GPG_PWD: ${{ secrets.AGORALAB2020_PP_GPG_PWD }}
      AGORALAB2020_KEYCHAIN_PASSWORD: ${{ secrets.AGORALAB2020_KEYCHAIN_PASSWORD }}
      # AgoraQA2021
      AGORAQA2021_P12_BASE64: ${{ secrets.AGORAQA2021_P12_BASE64 }}
      AGORAQA2021_P12_PWD: ${{ secrets.AGORAQA2021_P12_PWD }}
      AGORAQA2021_PP_GPG_PWD: ${{ secrets.AGORAQA2021_PP_GPG_PWD }}
      AGORAQA2021_KEYCHAIN_PASSWORD: ${{ secrets.AGORAQA2021_KEYCHAIN_PASSWORD }}
      # AgoraTest2020
      AGORATEST2020_P12_BASE64: ${{ secrets.AGORATEST2020_P12_BASE64 }}
      AGORATEST2020_P12_PWD: ${{ secrets.AGORATEST2020_P12_PWD }}
      AGORATEST2020_PP_GPG_PWD: ${{ secrets.AGORATEST2020_PP_GPG_PWD }}
      AGORATEST2020_KEYCHAIN_PASSWORD: ${{ secrets.AGORATEST2020_KEYCHAIN_PASSWORD }}
      TEAM_LAB: ${{ secrets.TEAM_LAB }}
      TEAM_QA: ${{ secrets.TEAM_QA }}
      TEAM_TEST: ${{ secrets.TEAM_TEST }}
      CODE_SIGN_IDENTITY_LAB: ${{ secrets.CODE_SIGN_IDENTITY_LAB }}
      CODE_SIGN_IDENTITY_QA: ${{ secrets.CODE_SIGN_IDENTITY_QA }}
      CODE_SIGN_IDENTITY_TEST: ${{ secrets.CODE_SIGN_IDENTITY_TEST }}
    steps:
      - uses: actions/checkout@v3

      - name: Check out build project
        uses: actions/checkout@v3
        with:
          repository: AgoraIO/Agora-Flutter-SDK
          ref: ${{ inputs.build_branch }}
          path: Agora-Flutter-SDK

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.0.0'

      - name: Run build ios
        run: |
          dart pub get
          dart run bin/hoe.dart build-agora-flutter-example --project-dir=Agora-Flutter-SDK --artifacts-output-dir=output --platforms=ios --process-build --apple-package-name=io.agora.agoraRtcEngineExample --flutter-package-name=agora_rtc_engine
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Test with environment variables
        run: echo $BUILD_NAME
        env:
          BUILD_NAME: agora_rtc_engine_example_${{ steps.date.outputs.date }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: agora_rtc_engine_example_${{ steps.date.outputs.date }}
          files: "output/*.zip"
